#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>

struct doublyLL{
	int data;

	struct doublyLL *next,*prev;
};
struct doublyLL *first=NULL,*head=NULL,*temp=NULL;

void menu();
void nodes(int);
void createLL();
void deleteFirstNode();
void printLL();

int main(){
	int choice=0,totalNodes=0;
	menu();
	printf("Enter your choice:");
	scanf("%d",&choice);
do
 {
  system("cls"); // To clear the screen
  menu();
  printf("\nEnter Your Choice : ");
  scanf("%d",&choice);

  switch(choice)
  {
    case 1: printf("Enter total number of nodes:");
            scanf("%d",&totalNodes);
            nodes(totalNodes);
            break;

    case 2: deleteFirstNode();
            break;
            
    

   default:
    printf("Thanks for Using LL Program");
    break;
  }

  getch(); //To stop output on Screen

 }while(choice>0 && choice<7);


	return 0;
}

void menu(){
	printf("******************Menu******************");
	printf("\n");
	printf("->Enter 1 for creation of a doubly linked list\n");
	printf("->Enter 2 for deletion of first node\n");
	printf("->Enter 3 for deleting any one node\n");
	printf("->Enter 4 for deletion of a node between two nodes\n");
	printf("->Enter 5 for deletion of last node\n");
	printf("->Enter 6 for printing of  a linked list\n");
}

void nodes(int node){
	while(node>0){
		createLL();
		node--;
	}
}

void createLL(){

	int node_data=0;
	temp = (struct doublyLL*) malloc (sizeof(struct doublyLL)*1);
	printf("Enter your data:");
	scanf("%d",&node_data);
	temp->data = node_data;
	temp->next = NULL;
	temp->prev=NULL;
    head = first;
	if(first==NULL){
		first=temp;
		first->next = NULL;
		first->prev = NULL;
	}
	else{
		head = first;
		while(head->next!=NULL){
			head=head->next;
		}

		head->next=temp;
		temp->prev = head;
		temp->next = NULL;
	}
	//printLL();
}
void deleteFirstNode(){
    if(first==NULL){
        printf("There is no element in the LL");
        exit(0);
    }
    else{
        temp = first;
        first = first->next;
        first->prev = NULL;
        free(temp);
    }
    printLL();

}
void printLL(){
    int i=1;
	head = first;
	while(head!=NULL){
		printf("%d node is %d\n",i,head->data);
		head = head->next;
		i++;
	}
}